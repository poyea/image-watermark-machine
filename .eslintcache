[{"D:\\image-2\\src\\Home.js":"1","D:\\image-2\\src\\index.js":"2","D:\\image-2\\src\\reportWebVitals.js":"3","D:\\image-2\\src\\components\\buttons.js":"4","D:\\image-2\\src\\components\\dragover.js":"5","D:\\image-watermark-machine\\src\\index.js":"6","D:\\image-watermark-machine\\src\\reportWebVitals.js":"7","D:\\image-watermark-machine\\src\\Home.js":"8","D:\\image-watermark-machine\\src\\components\\dragover.js":"9","D:\\image-watermark-machine\\src\\components\\buttons.js":"10"},{"size":6204,"mtime":1610390854758,"results":"11","hashOfConfig":"12"},{"size":503,"mtime":1610390466468,"results":"13","hashOfConfig":"12"},{"size":364,"mtime":1610390849413,"results":"14","hashOfConfig":"12"},{"size":593,"mtime":1610389486588,"results":"15","hashOfConfig":"12"},{"size":300,"mtime":1609686274483,"results":"16","hashOfConfig":"12"},{"size":503,"mtime":1610390466468,"results":"17","hashOfConfig":"18"},{"size":364,"mtime":1610390849413,"results":"19","hashOfConfig":"18"},{"size":6204,"mtime":1610390854758,"results":"20","hashOfConfig":"18"},{"size":300,"mtime":1609686274483,"results":"21","hashOfConfig":"18"},{"size":593,"mtime":1610389486588,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1oa9mln",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"9cvahp",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\image-2\\src\\Home.js",["46","47"],"D:\\image-2\\src\\index.js",[],"D:\\image-2\\src\\reportWebVitals.js",[],"D:\\image-2\\src\\components\\buttons.js",[],"D:\\image-2\\src\\components\\dragover.js",[],"D:\\image-watermark-machine\\src\\index.js",[],["48","49"],"D:\\image-watermark-machine\\src\\reportWebVitals.js",[],"D:\\image-watermark-machine\\src\\Home.js",["50","51"],"import React, { useEffect, useRef, useState } from 'react';\nimport Buttons from './components/buttons';\nimport Dragover from './components/dragover';\nimport styles from './styles/Home.module.css';\n\nconst WATERMARK_STRING = `Copyright Â© ${new Date().getFullYear()} J. All Rights Reserved.     `.repeat(\n  100\n);\nconst WATERMARK_FILLSTYLE = 'rgb(0, 140, 255)';\nconst WATERMARK_LINESTYLE = '#ffffff';\n\nconst Home = () => {\n  /*\n   * Sticky header hooks.\n   */\n  const refStickyContainer = useRef(null);\n  const [isSticky, setSticky] = useState(false);\n  /*\n   * Files hooks for processing.\n   */\n  const [files, setFiles] = useState({});\n  const [filesArray, setFilesArray] = useState([]);\n\n  const [isDragFocus, setDragFocus] = useState(false);\n\n  const [isDrawn, setDrawn] = useState(false);\n\n  const addTextToImage = (imagePath, text, id) => {\n    let toModifyCanvas = document.getElementById(id);\n    let context = toModifyCanvas.getContext('2d');\n    let img = new Image();\n    img.src = imagePath;\n    img.onload = () => {\n      toModifyCanvas.width = img.width;\n      toModifyCanvas.height = img.height;\n      context.drawImage(img, 0, 0);\n      context.lineWidth = 1;\n      context.fillStyle = WATERMARK_FILLSTYLE;\n      context.lineStyle = WATERMARK_LINESTYLE;\n      context.font = `${toModifyCanvas.height / 80}px serif`;\n      context.rotate(Math.PI / 4);\n      context.fillText(text, 0, 0);\n      /*\n       * Drawings\n       */\n      for (let mul = -1; mul <= 1; mul += 2) {\n        for (\n          let xTran = 0, yTran = 0, count = toModifyCanvas.width / 200;\n          count >= 2;\n          count -= 1\n        ) {\n          context.save();\n          context.translate(xTran, yTran);\n          context.fillText(text, 0, 0);\n          context.restore();\n          yTran -= (toModifyCanvas.height / count) * mul;\n        }\n      }\n    };\n  };\n\n  const handleScroll = () => {\n    if (refStickyContainer.current) {\n      setSticky(refStickyContainer.current.getBoundingClientRect().top <= 0);\n    }\n  };\n\n  const applyWaterMark = () => {\n    filesArray.forEach((file, idx) => {\n      addTextToImage(URL.createObjectURL(file), WATERMARK_STRING, idx);\n    });\n    setDrawn(true);\n  };\n\n  const clearDesk = () => {\n    for (let i = 0; i < filesArray.length; ++i) {\n      let toModifyCanvas = document.getElementById(i);\n      let context = toModifyCanvas.getContext('2d');\n      context.clearRect(0, 0, toModifyCanvas.width, toModifyCanvas.height);\n    }\n    setFiles({});\n    setFilesArray([]);\n    setDrawn(false);\n  };\n\n  const downloadImages = () => {\n    for (let i = 0; i < filesArray.length; ++i) {\n      let link = document.createElement('a');\n      const filename = files[i]['name'];\n      const extension = filename.substring(filename.lastIndexOf('.') + 1);\n      const name = filename.substring(0, filename.lastIndexOf('.'));\n      link.download = `${name}_watermarked.${extension}`;\n      link.href = document.getElementById(i).toDataURL();\n      link.click();\n    }\n  };\n\n  const handleDragEnter = () => {\n    setDragFocus(true);\n  };\n\n  const handleDragExit = () => {\n    setDragFocus(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('dragover', (evt) => {\n      handleDragEnter();\n      evt.preventDefault();\n    });\n    window.addEventListener('dragover', (evt) => {\n      handleDragEnter();\n      evt.preventDefault();\n    });\n    window.addEventListener('drop', (evt) => {\n      handleDragExit();\n      setFiles(evt.dataTransfer.files);\n      handleUploadFiles(evt.dataTransfer.files);\n      evt.preventDefault();\n    });\n    window.addEventListener('dragleave', (evt) => {\n      handleDragExit();\n      evt.preventDefault();\n    });\n    document.title = 'Image Watermarker';\n    return () => {\n      window.removeEventListener('scroll', () => handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(files);\n  }, [files]);\n\n  const handleUploadFiles = (files) => {\n    if (files.length === 0) {\n      return;\n    }\n    // setFiles(files);\n    let filesArray = [];\n    for (let i = 0; i < files.length; ++i) {\n      filesArray.push(files[i]);\n    }\n    setFilesArray(filesArray);\n  };\n\n  return (\n    <>\n      <main className={styles.main} id=\"main\">\n        <div\n          ref={refStickyContainer}\n          className={`\n            ${isSticky ? styles.stickybanner : ''}\n            `}\n        >\n          <h1\n            className={`\n            ${styles.title} ${\n              isSticky ? styles.sticky + ' ' + styles.wrapper : ''\n            }\n            `}\n          >\n            Image Watermarker\n          </h1>\n        </div>\n        <p className={styles.description}>\n          <input\n            type=\"file\"\n            id=\"input\"\n            files={filesArray}\n            accept=\"image/*\"\n            multiple\n            onChange={(e) => handleUploadFiles(e.target.files)}\n          />\n        </p>\n        {filesArray.length > 0 &&\n          filesArray.map((file, idx) => (\n            <div key={idx}>\n              <img\n                id={'img' + idx}\n                alt={file['name']}\n                src={URL.createObjectURL(file)}\n                className={styles.img + (!isDrawn ? '' : ` ${styles.hidden}`)}\n              ></img>\n              <canvas\n                id={idx}\n                className={styles.img + (!isDrawn ? ` ${styles.hidden}` : '')}\n              ></canvas>\n            </div>\n          ))}\n      </main>\n\n      <footer className={styles.footer}>\n        <a\n          href=\"https://github.com/poyea\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          dev @poyea - {new Date().getFullYear()}\n        </a>\n        <hr></hr>\n        <a\n          href=\"https://github.com/poyea\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {filesArray.length == 0 && (\n            <img src=\"https://avatars3.githubusercontent.com/u/24757020\"></img>\n          )}\n        </a>\n      </footer>\n      <Dragover isDragFocus={isDragFocus} />\n      <Buttons\n        clearDesk={clearDesk}\n        applyWaterMark={applyWaterMark}\n        downloadImages={downloadImages}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","D:\\image-watermark-machine\\src\\components\\dragover.js",[],["52","53"],"D:\\image-watermark-machine\\src\\components\\buttons.js",[],{"ruleId":"54","severity":1,"message":"55","line":208,"column":30,"nodeType":"56","messageId":"57","endLine":208,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":209,"column":13,"nodeType":"60","endLine":209,"endColumn":74},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"54","severity":1,"message":"55","line":208,"column":30,"nodeType":"56","messageId":"57","endLine":208,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":209,"column":13,"nodeType":"60","endLine":209,"endColumn":74},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"no-global-assign","no-unsafe-negation"]